package org.xclcharts.renderer;

import java.util.ArrayList;
import java.util.List;

import org.xclcharts.renderer.plot.PlotAreaRender;

import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.PointF;

public class PlotAttrInfo {
	
	private List<Location> mAttrInfoLocation = null;
	private List<String> mAttrInfo = null;
	private List<Float> mAttrInfoPostion = null;	
	private List<Paint> mAttrInfoPaint = null;
	
	
	public PlotAttrInfo()
	{
	}
	
	
	/**
	  * 清掉所有附加信息
	  */
	 public void clearPlotAttrInfo()
	 {
		if(null != mAttrInfoLocation) mAttrInfoLocation.clear();	
		if(null != mAttrInfo) mAttrInfo.clear();	
		if(null != mAttrInfoPostion) mAttrInfoPostion.clear();	
		if(null != mAttrInfoPaint) mAttrInfoPaint.clear();	
	 }		
	 
	 public void clear()
	 {
	 	mAttrInfoLocation.clear();
		mAttrInfo.clear();
		mAttrInfoPostion.clear();
		mAttrInfoPaint.clear();
	 }
	 
	 /**
	  * 增加附加信息
	  * @param position		显示方位
	  * @param info			附加信息
	  * @param infoPosRadiusPercentage	信息显示在总半径指定比例所在位置
	  * @param paint		用来绘制用的画笔
	  */
   public void addAttributeInfo(Location  position ,String info,
   								float infoPosRadiusPercentage  ,Paint paint) { 
   	
	   	if(null == mAttrInfoLocation) mAttrInfoLocation = new ArrayList<Location> ();
	   	if(null == mAttrInfo) mAttrInfo = new ArrayList<String>();
	   	
	   	if(null == mAttrInfoPostion) mAttrInfoPostion = new ArrayList<Float>();    	
	   	if(null == mAttrInfoPaint) mAttrInfoPaint = new ArrayList<Paint>();
	   	    	
	   	mAttrInfoLocation.add(position);
	   	mAttrInfo.add(info);
	   	mAttrInfoPostion.add(infoPosRadiusPercentage);
	   	mAttrInfoPaint.add(paint);    	
   }
	
	// renderAttrInfo(canvas,plotArea,getRadius() );
   	private void renderAttrInfo(Canvas canvas,PlotAreaRender plotArea,float plotRadius)
	{		
		if(null == mAttrInfo) return ;
		if(null == mAttrInfoLocation) return ;
		float radius = 0.0f; 
		String info = "";				
		PointF pos = new PointF();
	
		for(int i=0;i<mAttrInfo.size();i++)
		{
			info = mAttrInfo.get(i);
			if("" == info) continue;
			
			if(null == mAttrInfoPostion || mAttrInfoPostion.size() < i)continue;	
			if(null == mAttrInfoPaint.get(i) || mAttrInfoPaint.size() < i) continue;
			
			pos.x =  plotArea.getCenterX();
			pos.y =  plotArea.getCenterY();
			
			radius = plotRadius * mAttrInfoPostion.get(i);
			switch(mAttrInfoLocation.get(i))
			{
				case TOP:
					pos.y =  plotArea.getCenterY() - radius;
					break;
				case BOTTOM:
					pos.y =  plotArea.getCenterY() + radius;
					break;
				case LEFT:
					pos.x =  plotArea.getCenterX() - radius;
					break;
				case RIGHT:
					pos.x =  plotArea.getCenterX() + radius;
					break;
			}	    							
			canvas.drawText(info, pos.x, pos.y, mAttrInfoPaint.get(i));
		}
		
		//mAttrInfoLocation.clear();
		//mAttrInfo.clear();
		//mAttrInfoPostion.clear();
		//mAttrInfoPaint.clear();
	}
	


}
