/**
 * Copyright 2014  XCL-Charts
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 	
 * @Project XCL-Charts 
 * @Description Android图表基类库
 * @author XiongChuanLiang<br/>(xcl_168@aliyun.com)
 * @license http://www.apache.org/licenses/  Apache v2 License
 * @version 2.0
 */
package org.xclcharts.renderer.plot;


/**
 * @ClassName PlotLabel
 * @Description 用于设定标签显示的属性
 * @author XiongChuanLiang<br/>(xcl_168@aliyun.com)
 *
 */

public class PlotLabel {
	
	/*
	protected float mLabOffsetLeft = 0.0f;
	protected float mLabOffsetTop = 0.0f;
	protected float mLabOffsetRight = 0.0f;
	protected float mLabOffsetBottom = 0.0f;
	
	//protected int mLabBoxColor = -1;
	//protected boolean mLabBox = true;
	*/
	
	//标签与框的保留间距
	protected float mMargin  = 10f;	
			
	//行间距
	protected float mRowSpan = 10.0f;		
	protected float mColSpan = 10.0f;	
	
	//box
	protected BorderRender mBorder = new BorderRender();
	protected boolean mShowBox = true;
	protected boolean mShowBoxBorder = true;
	protected boolean mShowBackground = true;
			
	//标签起始偏移多少距离
	protected float mOffsetX = 0.0f;
	protected float mOffsetY = 0.0f;
			
	
	public PlotLabel() {
		// TODO Auto-generated constructor stub
	}
	
	/*
	public void setLabelsOffset(XEnum.Location location,float value)
	{
		switch(location)
		{
			case LEFT:
					mLabOffsetLeft = value;
					break;
			case TOP:
					mLabOffsetTop = value;
					break;
			case RIGHT:
					mLabOffsetRight = value;
					break;
			case BOTTOM:
					mLabOffsetBottom = value;
					break;
		}
	}
	
	
	
	public void setLabelsBgColor(int color)
	{
		mLabBoxColor = color;
	}
	
	public int getLabelsBgColor()
	{
		return mLabBoxColor;
	}
	
	public void showLabelsBox()
	{
		mLabBox = true;
	}
	
	public void hideLabelsBox()
	{
		mLabBox = false;
	}
	
	public boolean isShowLabelsBox()
	{
		return mLabBox;
	}
	
	
	public float getLabOffsetLeft()
	{
		return mLabOffsetLeft;
	}
	
	public float getLabOffsetTop()
	{
		return mLabOffsetTop;
	}
	
	public float getLabOffsetRight()
	{
		return mLabOffsetRight;
	}
	
	public float getLabOffsetBottom()
	{
		return mLabOffsetBottom;
	}*/
	
	 /**
	  * 开放标签框绘制基类
	  * @return  框绘制类
	  */
	 public Border getBox()
	 {		
		 return mBorder;
	 }

	 /**
	 * 不显示标签框		
	 */
	public void hideBox()
	{
		mShowBox = false;
	}
	
	/**
	 * 不显示标签边框		
	 */
	public void hideBorder()
	{
		mShowBoxBorder = false;
	}
	
	/**
	 * 不显示标签背景	
	 */
	public void hideBackground()
	{
		mShowBackground = false;
	}
	
	/**
	 * 显示标签框		
	 */
	public void showBox()
	{
		mShowBox = true;
		showBorder();
		showBackground();
	}
	
	/**
	 * 显示标签边框		
	 */
	public void showBorder()
	{
		mShowBoxBorder = true;
	}
	
	/**
	 * 显示图背景		
	 */
	public void showBackground()
	{
		mShowBackground = true;
	}
		
	 /**
	  * 标签框起始向X方向偏移多少距离
	  * @param offset 偏移值
	  */
	 public void setOffsetX(float offset)
	 {		 
		 mOffsetX = offset;
	 }
	 
	 /**
	  * 标签框起始向Y方向偏移多少距离
	  * @param offset 偏移值
	  */
	 public void setOffsetY(float offset)
	 {		 
		 mOffsetY = offset;
	 }
	 
		
	 /**
	  * 标签与框的保留间距
	  * @param margin 间距
	  */
	 public void setMargin(float margin)
	 {		 
		 mMargin = margin;
	 }
	 
	 
	 /**
	 * 设置行间距
	 * @param span 间距
	 */
	public void setRowSpan(float span)
	{
		mRowSpan = span;		
	}
	
	public void setColSpan(float span)
	{
		mColSpan = span;
	}
		
	 /**
	  * 返回图例间距
	  * @return Key间距
	  */
	 public float getMargin()
	 {
		 return mMargin;
	 }
	 
}
