package com.demo.xclcharts.view;

import java.util.ArrayList;
import java.util.List;

import org.xclcharts.chart.DialChart;
import org.xclcharts.common.MathHelper;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.util.AttributeSet;
import android.util.Log;

public class DialChart02View extends GraphicalView {

	private String TAG = "DialChart02View";	
	
	private DialChart chart = new DialChart();
	
	private List<String> mLabels = new ArrayList<String>();	
	private float mPercentage = 0.9f;
	
	public DialChart02View(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
		initView();
	}
	
	public DialChart02View(Context context, AttributeSet attrs){   
        super(context, attrs);   
        initView();
	 }
	 
	 public DialChart02View(Context context, AttributeSet attrs, int defStyle) {
			super(context, attrs, defStyle);
			initView();
	 }
	 
	 
	 private void initView()
	 {
		chartRender();
	 }
	 
	 @Override  
	    protected void onSizeChanged(int w, int h, int oldw, int oldh) {  
	        super.onSizeChanged(w, h, oldw, oldh);  
	        chart.setChartRange(w ,h ); 
	    }  		
						
		public void chartRender()
		{
			try {								
							
				//设置标题背景			
				chart.setApplyBackgroundColor(true);
				chart.setBackgroundColor( (int)Color.rgb(47, 199, 140) );
				//绘制边框
				chart.showRoundBorder();
						
				//设置当前百分比
				chart.setCurrentPercentage(mPercentage);
				
				//设置指针长度
				chart.setPointerLength(0.6f);
				
				//增加轴承
				addAxis();						
				/////////////////////////////////////////////////////////////
				//设置附加信息
				addAttrInfo();
				/////////////////////////////////////////////////////////////
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				Log.e(TAG, e.toString());
			}
			
		}
		
		public void addAxis()
		{
			mPercentage = 0.3f;
			chart.setCurrentPercentage(mPercentage);
			
			
			//开始设置轴			
			//轴1 --最外面的弧线轴
			chart.addArcLineAxis(1);
			
		
			//轴3 --环形颜色轴
			List<Float> ringPercentage = new ArrayList<Float>();			
			//float rper = MathHelper.getInstance().div(1, 4); //相当于40%	//270, 4
			ringPercentage.add( mPercentage);
			ringPercentage.add( 0.7f);
			
			List<Integer> rcolor  = new ArrayList<Integer>();				
			rcolor.add((int)Color.rgb(222, 248, 239));
			rcolor.add((int)Color.rgb(99, 214, 173));						
			chart.addStrokeRingAxis(0.75f,0.6f, ringPercentage, rcolor);
			
			chart.getPlotAxis().get(1).getFillAxisPaint().setColor((int)Color.rgb(47, 199, 140) );
			
			
		}
		
		
		private void addAttrInfo()
		{
			
		}
		
		public void setCurrentStatus(float percentage)
		{
			//清理
			chart.clearData();
					
			mPercentage = 0.3f; // percentage;
			//设置当前百分比
			chart.setCurrentPercentage(mPercentage);
			addAxis();
			addAttrInfo();
		}


		@Override
		public void render(Canvas canvas) {
			// TODO Auto-generated method stub
			 try{
		            chart.render(canvas);
		        } catch (Exception e){
		        	Log.e(TAG, e.toString());
		        }
		}

}
