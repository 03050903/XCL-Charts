package org.xclcharts.view;

import java.util.List;

import org.xclcharts.event.touch.ChartTouch;
import org.xclcharts.event.zoom.ChartZoom;
import org.xclcharts.event.zoom.IChartZoom;
import org.xclcharts.renderer.XChart;

import android.content.Context;
import android.graphics.Canvas;
import android.util.AttributeSet;
import android.view.MotionEvent;


public abstract class ChartView extends GraphicalView {
	
	//private String TAG = "TouchView";
	
	private ChartZoom mChartZoom[];
	private ChartTouch mChartTouch[];
	

	public TouchView(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
		
	}	
	
	 public TouchView(Context context, AttributeSet attrs){   
	        super(context, attrs);   
	        
	 }
	 
	 public TouchView(Context context, AttributeSet attrs, int defStyle) {
			super(context, attrs, defStyle);
		
	 }
	 
	@Override
	public void render(Canvas canvas) {
		// TODO Auto-generated method stub
		
	}
		
	@Override
	public boolean onTouchEvent(MotionEvent event) {
		// TODO Auto-generated method stub		
		
		touchChart(event);			
		return true;
	}	
		
	/**
	 * 绑定需要处理的图表对象类
	 * @return 对象集
	 */
	public abstract List<XChart> bindChart();		
	//////////////////////////////////////////////////////	
	
	//////////////////////////////////////////////////////
	//用于手势操作来平移或放大缩小图表
	//////////////////////////////////////////////////////	
	private int getTouchCharts()
	{		
		 if(null != mChartTouch ) return mChartTouch.length;
		
		 List<XChart> listCharts = bindChart();
		 int count = listCharts.size();		 
		 if(0 == count) return 0;	
		 
		 mChartTouch = new ChartTouch[count];			 
		 for(int i=0;i<count;i++)
			 mChartTouch[i] = new ChartTouch(this,listCharts.get(i));		
		
		 return count;
	}	
	
	
	public boolean touchChart(MotionEvent event)
	{		
		int count = getTouchCharts();
		for(int i=0;i<count;i++)
			mChartTouch[i].handleTouch(event);		
		
		return true;
	}
			

}
