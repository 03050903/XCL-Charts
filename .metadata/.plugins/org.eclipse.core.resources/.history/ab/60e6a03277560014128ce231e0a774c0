package org.xclcharts.renderer.plot;

import org.xclcharts.renderer.XEnum;

import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;

public class RectBorder {
	
	//线的基类画笔	
	private Paint mPaintBorderLine = null;
		
	private XEnum.LineStyle mLineStyle = XEnum.LineStyle.SOLID;
	private XEnum.RectType mRectType = XEnum.RectType.ROUNDRECT;	
	private int mRaidus = 15;
	protected static final int mBorderSpadding = 5;
	
					
	public RectBorder(){}
	
	/**
	 * 开放线的画笔
	 * @return 画笔
	 */
	public Paint getLinePaint()
	{
		if(null == mPaintBorderLine)
		{
			mPaintBorderLine = new Paint();
			mPaintBorderLine.setAntiAlias(true);
			mPaintBorderLine.setColor((int)Color.rgb(26, 59, 105));
			mPaintBorderLine.setStyle(Style.STROKE);  		
			mPaintBorderLine.setStrokeWidth(2);	
		}
		return mPaintBorderLine;
	}
	
	/**
	 * 设置边框线类型
	 * @param style 线类型
	 */
	public void setBorderLineStyle(XEnum.LineStyle style) 
	{				
		mLineStyle = style;
	}	
	
	/**
	 * 设置边框类型
	 * @param type 框类型
	 */
	public void setBorderRectType(XEnum.RectType type) 
	{				
		mRectType = type;
	}
				
	/**
	 * 返回边框线类型
	 * @return 边框线类型
	 */
	public XEnum.LineStyle getBorderLineStyle()
	{
		return mLineStyle;		
	}
	
	/**
	 * 返回边框类型
	 * @return 边框类型
	 */
	public XEnum.RectType getBorderRectType()
	{
		return mRectType;
	}
	
	/**
	 * 设置角圆弧半径
	 * @param radius 半径
	 */
	public void setRoundRadius(int radius)
	{
		mRaidus = radius;
	}
	
	/**
	 * 返回角圆弧半径
	 * @return 半径
	 */
	public int getRoundRadius()
	{		
		return mRaidus;		
	}
	
	

}
